/*! \page financial_advisor_methods_and_orders Placing Orders to a FA account
	
	\section api_orders Account Allocations
	
	Financial Advisor users can invoke @ref IBApi::EClient::placeOrder function while specifying corresponding Financial Advisor Fields in the @ref IBApi::Order object.
	<b>Important</b>: Unlike in TWS, there is not a default account allocation for the API- it must be specified with every order placed. <br>Also note, in TWS v983+ there is a setting to merge group and profile functionality. See details in @ref groups_merge
	
	<b>Place an Order for a Single Managed Account</b>
	
	In linked accounts (not Financial Advisor accounts) in particular, it will be necessary to specify an account number in the IBApi::Order::account field with every order placed. 
	
	<ul id="tab">
		<li class="active">
			\snippet Program.cs faorderoneaccount
		</li>
		<li>
			\snippet Testbed.java faorderoneaccount
		</li>
		<li> 
			\snippet MainModule.vb faorderoneaccount
		</li>
		<li> 
			\snippet TestCppClient.cpp faorderoneaccount
		</li>
		<li> 
			\snippet Program.py faorderoneaccount
		</li>
	</ul>
	
	<b>Place an Order for an Account Group</b>
	
	For <em>EqualQuantity</em>, <em>NetLiq</em> and <em>AvailableEquity</em> allocation methods, you need to specify the @ref IBApi::Order::FaGroup and @ref IBApi::Order::FaMethod parameters.
		
	<ul id="tab">
		<li class="active">
			\snippet Program.cs faordergroupequalquantity
		</li>
		<li> 
			\snippet Testbed.java faordergroupequalquantity
		</li>
		<li> 
			\snippet MainModule.vb faordergroupequalquantity
		</li>
		<li> 
			\snippet TestCppClient.cpp faordergroupequalquantity
		</li>
		<li> 
			\snippet Program.py faordergroupequalquantity
		</li>
	</ul>
	
	For <em>PctChange</em> allocation methods, you should <b>NOT</b> specify the order size but you need to specify @ref IBApi::Order::FaPercentage parameter.
	
	<ul id="tab">
		<li class="active">
			\snippet Program.cs faordergrouppctchange
		</li>
		<li> 
			\snippet Testbed.java faordergrouppctchange
		</li>
		<li> 
			\snippet MainModule.vb faordergrouppctchange
		</li>
		<li> 
			\snippet TestCppClient.cpp faordergrouppctchange
		</li>
		<li> 
			\snippet Program.py faordergrouppctchange
		</li>
	</ul>
	
	<b>Place an Order for an Account Profile</b>
	
	<ul id="tab">
		<li class="active">
			\snippet Program.cs faorderprofile
		</li>
		<li> 
			\snippet Testbed.java faorderprofile
		</li>
		<li> 
			\snippet MainModule.vb faorderprofile
		</li>
		<li> 
			\snippet TestCppClient.cpp faorderprofile
		</li>
		<li> 
			\snippet Program.py faorderprofile
		</li>
	</ul>
	
	\section model_orders Model Allocations
	
	<ul id="tab">
		<li class="active">
			\snippet Program.cs modelorder
		</li>
		<li> 
			\snippet Testbed.java modelorder
		</li>
		<li> 
			\snippet MainModule.vb modelorder
		</li>
		<li> 
			\snippet TestCppClient.cpp modelorder
		</li>
		<li> 
			\snippet Program.py modelorder
		</li>
	</ul>
	
	\section soft_dollar_tiers Soft Dollar Tiers
	
	Starting from API version 9.72.18 or higher and TWS Build 959 or higher, Financial Advisors, Hedge Fund and Mutual Fund are able to utilize the Soft Dollar Tiers feature via the API. 
	
	<b> Request Soft Dollar Tiers</b>
	
	The @ref IBApi::EClient::reqSoftDollarTiers function can be called to manually request current Soft Dollar Tiers structure from TWS. 
	
	<ul id="tab">
		<li class="active">
			\snippet Program.cs reqSoftDollarTiers
		</li>
		<li> 
			\snippet Testbed.java reqSoftDollarTiers
		</li>
		<li> 
			\snippet MainModule.vb reqSoftDollarTiers
		</li>
		<li> 
			\snippet TestCppClient.cpp reqSoftDollarTiers
		</li>
		<li> 
			\snippet Program.py reqSoftDollarTiers
		</li>
	</ul>
	
	<b> Receive Soft Dollar Tiers</b>
	
	The @ref IBApi::EWrapper::softDollarTiers call back function is triggered for returning Soft Dollar Tiers Value, Name and Display Name. 
	
	<ul id="tab">
		<li class="active">
			\snippet EWrapperImpl.cs ewrapperimpl
		   ...
		   \snippet EWrapperImpl.cs softDollarTiers
		</li>
		<li> 
			\snippet EWrapperImpl.java ewrapperimpl
			...
			\snippet EWrapperImpl.java softDollarTiers
		</li>
		<li> 
			\snippet EWrapperImpl.vb ewrapperimpl
			...
			\snippet EWrapperImpl.vb softDollarTiers
		</li>
		<li> 
			\snippet TestCppClient.h ewrapperimpl
			...
			\snippet TestCppClient.cpp softDollarTiers
		</li>
		<li> 
			\snippet Program.py ewrapperimpl
			...
			\snippet Program.py softDollarTiers
		</li>
	</ul>
	
	<br><br>
*/