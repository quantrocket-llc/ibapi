/*! \page historical_time_and_sales Historical Time and Sales Data

	\section reqHistoricalTicks High Resolution Historical Data

	The highest granularity of historical data from IB's database can be retrieved using the API function IBApi::EClient::reqHistoricalTicks. This corresponds to the <a href="https://www.interactivebrokers.com/en/software/tws/usersguidebook/mosaic/timensales.htm" target="_blank" class="linkexternal">TWS Historical Time & Sales</a> Window. TWS build <b>968+</b> and API version <b>973.04+</b> is required.

	- Historical Tick-By-Tick data is not available for combos
	- Data will not be returned from multiple trading sessions in a single request; Multiple requests must be used
	- To complete a full second, more ticks may be returned than requested

	<ul id="tab">
		<li class="active">
		</li>
		<li>
		</li>
		<li>
		</li>
		<li>
		</li>
		<li>
			<b>Note:</b> the historical Time&Sales feature in Python API is available starting in API v973.06+.
		</li>
	</ul>

	<ul id="tab">
		<li class="active">
			\snippet Program.cs reqhistoricalticks
		</li>
		<li>
			\snippet Testbed.java reqhistoricalticks
		</li>
		<li>
			\snippet MainModule.vb reqhistoricalticks
		</li>
		<li>
			\snippet TestCppClient.cpp reqhistoricalticks
		</li>
		<li>
			\snippet Program.py reqhistoricalticks
		</li>
	</ul>

	- <i><b>requestId</b></i>, id of the request
	- <i><b>contract</b></i>, Contract object that is subject of query.
	- <i><b>startDateTime</b></i>, i.e. "20170701 12:01:00". Uses TWS timezone specified at login.
	- <i><b>endDateTime</b></i>, i.e. "20170701 13:01:00". In TWS timezone. Exactly one of startDateTime or endDateTime must be defined.
	- <i><b>numberOfTicks</b></i>, Number of distinct data points. Max is 1000 per request.
	- <i><b>whatToShow</b></i>, (Bid_Ask, Midpoint, or Trades) Type of data requested.
	- <i><b>useRth</b></i>, Data from regular trading hours (1), or all available hours (0).
	- <i><b>ignoreSize</b></i>, Omit updates that reflect only changes in size, and not price. Applicable to Bid_Ask data requests.
	- <i><b>miscOptions</b></i> Should be defined as <i>null</i>; reserved for internal use.

	Data is returned to the functions @ref IBApi::EWrapper::historicalTicks (for whatToShow=MIDPOINT), @ref IBApi::EWrapper::historicalTicksBidAsk (for whatToShow=BID_ASK), and @ref IBApi::EWrapper::historicalTicksLast for (for whatToShow=TRADES), depending on the type of data requested.

	<ul id="tab">
		<li class="active">
			\snippet EWrapperImpl.cs historicalticks
			...
			\snippet EWrapperImpl.cs historicalticksbidask
			...
			\snippet EWrapperImpl.cs historicaltickslast
		</li>
		<li>
			\snippet EWrapperImpl.java historicalticks
			...
			\snippet EWrapperImpl.java historicalticksbidask
			...
			\snippet EWrapperImpl.java historicaltickslast
		</li>
		<li>
			\snippet EWrapperImpl.vb historicalticks
			...
			\snippet EWrapperImpl.vb historicalticksbidask
			...
			\snippet EWrapperImpl.vb historicaltickslast
		</li>
		<li>
			\snippet TestCppClient.cpp historicalticks
			...
			\snippet TestCppClient.cpp historicalticksbidask
			...
			\snippet TestCppClient.cpp historicaltickslast
		</li>
		<li>
			\snippet Program.py historicalticks
			...
			\snippet Program.py historicalticksbidask
			...
			\snippet Program.py historicaltickslast
		</li>
	</ul>

	\section historical_halted_unhalted Historical Halted and Unhalted ticks
	Effective with <b>TWS 10.15+</b> and <b>TWS API 10.15+</b> a new Tick-By-Tick attribute has been introduced. The tick attribute <i>pastLimit</i> is also returned with streaming Tick-By-Tick responses. Check @ref halted_unhalted section.
	- If tick has zero price, zero size and pastLimit flag is set - this is "Halted" tick.
	- If tick has zero price, zero size and followed immediately after "Halted" tick - this is "Unhalted" tick.

*/
