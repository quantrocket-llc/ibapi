/*! \page basic_orders Basic Orders

	\section auction Auction

	An <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=578">Auction</a> order is entered into the electronic
	trading system during the pre-market opening period for execution at the Calculated Opening Price (COP). If your order is not filled on the open, the order is re-submitted as a limit order with
    the limit price set to the COP or the best bid/ask after the market opens.
	<ul>
		<li>Products: FUT, STK</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=auc">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs auction
		</li>
		<li>
			\snippet OrderSamples.java auction
		</li>
		<li>
			\snippet OrderSamples.vb auction
		</li>
		<li>
			\snippet OrderSamples.cpp auction
		</li>
		<li>
			\snippet OrderSamples.py auction
		</li>
	</ul>

	\section discretionary Discretionary

	An <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=585">Discretionary</a> order is a limit order
	submitted with a hidden, specified 'discretionary' amount off the limit price which may be used to increase the price range over which the limit order is eligible to execute.
	The market sees only the limit price.
	<ul>
		<li>Products: STK</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=dis">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs discretionary
		</li>
		<li>
			\snippet OrderSamples.java discretionary
		</li>
		<li>
			\snippet OrderSamples.vb discretionary
		</li>
		<li>
			\snippet OrderSamples.cpp discretionary
		</li>
		<li>
			\snippet OrderSamples.py discretionary
		</li>
	</ul>

	\section market Market

	A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=602">Market</a> order is an order to buy or sell at the market bid or offer price. A market order may increase the likelihood of a fill
	and the speed of execution, but unlike the Limit order a Market order provides no price protection and may fill at a price far
	lower/higher than the current displayed bid/ask.
	<ul>
		<li>Products: BOND, CFD, EFP, CASH, FUND, FUT, FOP, OPT, STK, WAR</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=mkt">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs market
		</li>
		<li>
			\snippet OrderSamples.java market
		</li>
		<li>
			\snippet OrderSamples.vb market
		</li>
		<li>
			\snippet OrderSamples.cpp market
		</li>
		<li>
			\snippet OrderSamples.py market
		</li>
	</ul>

	\section market_if_touched Market If Touched

	A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=600">Market If Touched</a> (MIT) is an order to
	buy (or sell) a contract below (or above) the market. Its purpose is to take advantage
	of sudden or unexpected changes in share or other prices and provides investors with a trigger price to set an order in motion.
    Investors may be waiting for excessive strength (or weakness) to cease, which might be represented by a specific price point.
    MIT orders can be used to determine whether or not to enter the market once a specific price level has been achieved. This order
    is held in the system until the trigger price is touched, and is then submitted as a market order. An MIT order is similar to a
    stop order, except that an MIT sell order is placed above the current market price, and a stop sell order is placed below
	<ul>
		<li>Products: BOND, CFD, CASH, FUT, FOP, OPT, STK, WAR</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=mit">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs market_if_touched
		</li>
		<li>
			\snippet OrderSamples.java market_if_touched
		</li>
		<li>
			\snippet OrderSamples.vb market_if_touched
		</li>
		<li>
			\snippet OrderSamples.cpp market_if_touched
		</li>
		<li>
			\snippet OrderSamples.py market_if_touched
		</li>
	</ul>

	\section market_on_close Market On Close

	A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=599">Market On Close</a> (MOC) order is a market order that is
	submitted to execute as close to the closing price as possible.
	<ul>
		<li>Products: CFD, FUT, STK, WAR</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=moc">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs market_on_close
		</li>
		<li>
			\snippet OrderSamples.java market_on_close
		</li>
		<li>
			\snippet OrderSamples.vb market_on_close
		</li>
		<li>
			\snippet OrderSamples.cpp market_on_close
		</li>
		<li>
			\snippet OrderSamples.py market_on_close
		</li>
	</ul>

	\section market_on_open Market On Open

	A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=598">Market On Open</a> (MOO) combines a market order with the
	OPG time in force to create an order that is automatically submitted at the market's open and fills at the market price.
	<ul>
		<li>Products: CFD, FUT, STK, WAR</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=moo">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs market_on_open
		</li>
		<li>
			\snippet OrderSamples.java market_on_open
		</li>
		<li>
			\snippet OrderSamples.vb market_on_open
		</li>
		<li>
			\snippet OrderSamples.cpp market_on_open
		</li>
		<li>
			\snippet OrderSamples.py market_on_open
		</li>
	</ul>

	\section pegged_market Pegged to Market
	A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=616">pegged-to-market order</a> is designed to maintain a purchase price relative to the national best offer (NBO) or a sale price
	 relative to the national best bid (NBB). Depending on the width of the quote, this order may be passive or aggressive.
	 The trader creates the order by entering a limit price which defines the worst limit price that they are willing to accept.
	 Next, the trader enters an offset amount which computes the active limit price as follows:
		 Sell order price = Bid price + offset amount
		 Buy order price = Ask price - offset amount
	<ul>
		<li>Products: STK</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=pegmkt">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs pegged_market
		</li>
		<li>
			\snippet OrderSamples.java pegged_market
		</li>
		<li>
			\snippet OrderSamples.vb pegged_market
		</li>
		<li>
			\snippet OrderSamples.cpp pegged_market
		</li>
		<li>
			\snippet OrderSamples.py pegged_market
		</li>
	</ul>

	\section pegged_stock Pegged to Stock
	 A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=615">Pegged to Stock</a> order
	 continually adjusts the option order price by the product of a signed user-define delta and the change of
	 the option's underlying stock price. The delta is entered as an absolute and assumed to be positive for calls and negative for puts.
	 A buy or sell call order price is determined by adding the delta times a change in an underlying stock price to a specified starting
	 price for the call. To determine the change in price, the stock reference price is subtracted from the current NBBO midpoint.
	 The Stock Reference Price can be defined by the user, or defaults to the NBBO midpoint at the time of the order if no reference price
	 is entered. You may also enter a high/low stock price range which cancels the order when reached. The delta times the change in stock
	 price will be rounded to the nearest penny in favor of the order.
	<ul>
		<li>Products: OPT</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=relstk">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs pegged_stock
		</li>
		<li>
			\snippet OrderSamples.java pegged_stock
		</li>
		<li>
			\snippet OrderSamples.vb pegged_stock
		</li>
		<li>
			\snippet OrderSamples.cpp pegged_stock
		</li>
		<li>
			\snippet OrderSamples.py pegged_stock
		</li>
	</ul>

	\section relative_pegged_primary Pegged to Primary
	 <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=613">Relative</a> (a.k.a. Pegged-to-Primary)
	 orders provide a means for traders to seek a more aggressive price than the National Best Bid
	 and Offer (NBBO). By acting as liquidity providers, and placing more aggressive bids and offers than the current best bids and offers,
	 traders increase their odds of filling their order. Quotes are automatically adjusted as the markets move, to remain aggressive.
	 For a buy order, your bid is pegged to the NBB by a more aggressive offset, and if the NBB moves up, your bid will also move up.
	 If the NBB moves down, there will be no adjustment because your bid will become even more aggressive and execute. For sales, your
	 offer is pegged to the NBO by a more aggressive offset, and if the NBO moves down, your offer will also move down. If the NBO moves up,
	 there will be no adjustment because your offer will become more aggressive and execute. In addition to the offset, you can define an
	 absolute cap, which works like a limit price, and will prevent your order from being executed above or below a specified level.
	 Stocks, Options and Futures - not available on paper trading
	<ul>
		<li>Products: CFD, STK, OPT, FUT</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=rel">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs relative_pegged_primary
		</li>
		<li>
			\snippet OrderSamples.java relative_pegged_primary
		</li>
		<li>
			\snippet OrderSamples.vb relative_pegged_primary
		</li>
		<li>
			\snippet OrderSamples.cpp relative_pegged_primary
		</li>
		<li>
			\snippet OrderSamples.py relative_pegged_primary
		</li>
	</ul>

	\section sweep_to_fill Sweep to Fill
	 <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=607">Sweep-to-fill</a>
	 orders are useful when a trader values speed of execution over price. A sweep-to-fill order identifies the best price
	 and the exact quantity offered/available at that price, and transmits the corresponding portion of your order for immediate execution.
	 Simultaneously it identifies the next best price and quantity offered/available, and submits the matching quantity of your order for
	 immediate execution.
	<ul>
		<li>Products: CFD, STK, WAR (SMART only)</li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs sweep_to_fill
		</li>
		<li>
			\snippet OrderSamples.java sweep_to_fill
		</li>
		<li>
			\snippet OrderSamples.vb sweep_to_fill
		</li>
		<li>
			\snippet OrderSamples.cpp sweep_to_fill
		</li>
		<li>
			\snippet OrderSamples.py sweep_to_fill
		</li>
	</ul>

	\section auction_limit Auction Limit
	 For option orders routed to the Boston Options Exchange (BOX) you may elect to participate in the BOX's price improvement auction in
	 pennies. All BOX-directed <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=614">price improvement</a>
	 orders are immediately sent from Interactive Brokers to the BOX order book, and when the
	 terms allow, IB will evaluate it for inclusion in a price improvement auction based on price and volume priority. In the auction, your
	 order will have priority over broker-dealer price improvement orders at the same price.
	 An Auction Limit order at a specified price. Use of a limit order ensures that you will not receive an execution at a price less favorable
	 than the limit price. Enter limit orders in penny increments with your auction improvement amount computed as the difference between your
	 limit order price and the nearest listed increment.
	<ul>
		<li>Products: OPT (BOX only)</li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs auction_limit
		</li>
		<li>
			\snippet OrderSamples.java auction_limit
		</li>
		<li>
			\snippet OrderSamples.vb auction_limit
		</li>
		<li>
			\snippet OrderSamples.cpp auction_limit
		</li>
		<li>
			\snippet OrderSamples.py auction_limit
		</li>
	</ul>

	\section auction_pegged_stock Auction Pegged to Stock
	 For option orders routed to the Boston Options Exchange (BOX) you may elect to participate in the BOX's price improvement auction in pennies.
	 All BOX-directed <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=614">price improvement</a>
	 orders are immediately sent from Interactive Brokers to the BOX order book, and when the terms allow,
	 IB will evaluate it for inclusion in a price improvement auction based on price and volume priority. In the auction, your order will have
	 priority over broker-dealer price improvement orders at the same price.
	 An Auction Pegged to Stock order adjusts the order price by the product of a signed delta (which is entered as an absolute and assumed to be
	 positive for calls, negative for puts) and the change of the option's underlying stock price. A buy or sell call order price is determined
	 by adding the delta times a change in an underlying stock price change to a specified starting price for the call. To determine the change
	 in price, a stock reference price (NBBO midpoint at the time of the order is assumed if no reference price is entered) is subtracted from
	 the current NBBO midpoint. A stock range may also be entered that cancels an order when reached. The delta times the change in stock price
	 will be rounded to the nearest penny in favor of the order and will be used as your auction improvement amount.
	<ul>
		<li>Products: OPT (BOX only)</li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs auction_pegged_stock
		</li>
		<li>
			\snippet OrderSamples.java  auction_pegged_stock
		</li>
		<li>
			\snippet OrderSamples.vb  auction_pegged_stock
		</li>
		<li>
			\snippet OrderSamples.cpp  auction_pegged_stock
		</li>
		<li>
			\snippet OrderSamples.py  auction_pegged_stock
		</li>
	</ul>

	\section auction_relative Auction Relative
	 For option orders routed to the Boston Options Exchange (BOX) you may elect to participate in the BOX's price improvement auction in pennies.
	 All BOX-directed <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=614">price improvement</a>
	 orders are immediately sent from Interactive Brokers to the BOX order book, and when the terms allow,
	 IB will evaluate it for inclusion in a price improvement auction based on price and volume priority. In the auction, your order will have
	 priority over broker-dealer price improvement orders at the same price.
	 An Auction Relative order that adjusts the order price by the product of a signed delta (which is entered as an absolute and assumed to be
	 positive for calls, negative for puts) and the change of the option's underlying stock price. A buy or sell call order price is determined
	 by adding the delta times a change in an underlying stock price change to a specified starting price for the call. To determine the change
	 in price, a stock reference price (NBBO midpoint at the time of the order is assumed if no reference price is entered) is subtracted from
	 the current NBBO midpoint. A stock range may also be entered that cancels an order when reached. The delta times the change in stock price
	 will be rounded to the nearest penny in favor of the order and will be used as your auction improvement amount.
	<ul>
		<li>Products: OPT (BOX only)</li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs auction_relative
		</li>
		<li>
			\snippet OrderSamples.java auction_relative
		</li>
		<li>
			\snippet OrderSamples.vb auction_relative
		</li>
		<li>
			\snippet OrderSamples.cpp auction_relative
		</li>
		<li>
			\snippet OrderSamples.py auction_relative
		</li>
	</ul>

	\section block Block
	 The <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=580">Block</a> attribute is used for large volume option orders on ISE that consist of at least 50 contracts. To execute large-volume
	 orders over time without moving the market, use the @ref ad algorithm.
	<ul>
		<li>Products: OPT</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=block">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs  block
		</li>
		<li>
			\snippet OrderSamples.java  block
		</li>
		<li>
			\snippet OrderSamples.vb  block
		</li>
		<li>
			\snippet OrderSamples.cpp  block
		</li>
		<li>
			\snippet OrderSamples.py  block
		</li>
	</ul>

	\section boxtop Box Top
	 A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=582">Box Top</a>
	 order executes as a market order at the current best price. If the order is only partially filled, the remainder is submitted as
	 a limit order with the limit price equal to the price at which the filled portion of the order executed.
	<ul>
		<li>Products: OPT (BOX only)</li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs  boxtop
		</li>
		<li>
			\snippet OrderSamples.java  boxtop
		</li>
		<li>
			\snippet OrderSamples.vb  boxtop
		</li>
		<li>
			\snippet OrderSamples.cpp  boxtop
		</li>
		<li>
			\snippet OrderSamples.py  boxtop
		</li>
	</ul>

	\section limitorder Limit Order
	 A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=593">Limit order</a>
	 is an order to buy or sell at a specified price or better. The Limit order ensures that if the order fills,
	 it will not fill at a price less favorable than your limit price, but it does not guarantee a fill.
	<ul>
		<li>Products: BOND, CFD, CASH, FUT, FOP, OPT, STK, WAR</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=lmt">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs  limitorder
		</li>
		<li>
			\snippet OrderSamples.java  limitorder
		</li>
		<li>
			\snippet OrderSamples.vb  limitorder
		</li>
		<li>
			\snippet OrderSamples.cpp  limitorder
		</li>
		<li>
			\snippet OrderSamples.py  limitorder
		</li>
	</ul>

	\section limitorderwithcashqty Forex Cash Quantity Order
	Forex orders can be placed in denomination of second currency in pair using cashQty field. <br>
	Requires TWS or IBG 963+
	<ul>
		<li>Products: CASH</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=23876#963-02">Forex Cash Quantity Orders</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs  limitorderwithcashqty
		</li>
		<li>
			\snippet OrderSamples.java  limitorderwithcashqty
		</li>
		<li>
			\snippet OrderSamples.vb  limitorderwithcashqty
		</li>
		<li>
			\snippet OrderSamples.cpp  limitorderwithcashqty
		</li>
		<li>
			\snippet OrderSamples.py  limitorderwithcashqty
		</li>
	</ul>


	\section limitiftouched Limit if Touched
	 A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=592">Limit if Touched</a>
	 is an order to buy (or sell) a contract at a specified price or better, below (or above) the market. This order is
	 held in the system until the trigger price is touched. An LIT order is similar to a stop limit order, except that an LIT sell order is
	 placed above the current market price, and a stop limit sell order is placed below.
	<ul>
		<li>Products: BOND, CFD, CASH, FUT, FOP, OPT, STK, WAR</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=lit">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs limitiftouched
		</li>
		<li>
			\snippet OrderSamples.java limitiftouched
		</li>
		<li>
			\snippet OrderSamples.vb limitiftouched
		</li>
		<li>
			\snippet OrderSamples.cpp limitiftouched
		</li>
		<li>
			\snippet OrderSamples.py limitiftouched
		</li>
	</ul>

	\section limitonclose Limit on Close
	 A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=591">Limit-on-close</a>
	 (LOC) order will be submitted at the close and will execute if the closing price is at or better than the submitted limit price.
	<ul>
		<li>Products: CFD, FUT, STK, WAR</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=loc">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs limitonclose
		</li>
		<li>
			\snippet OrderSamples.java limitonclose
		</li>
		<li>
			\snippet OrderSamples.vb limitonclose
		</li>
		<li>
			\snippet OrderSamples.cpp limitonclose
		</li>
		<li>
			\snippet OrderSamples.py limitonclose
		</li>
	</ul>

	\section limitonopen Limit on Open
	 A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=590">Limit-on-Open</a> (LOO) order combines a limit order with the OPG time in force to create an order that is submitted at the market's open,
	 and that will only execute at the specified limit price or better. Orders are filled in accordance with specific exchange rules.
	<ul>
		<li>Products: CFD, STK, OPT, WAR</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=moo">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs limitonopen
		</li>
		<li>
			\snippet OrderSamples.java limitonopen
		</li>
		<li>
			\snippet OrderSamples.vb limitonopen
		</li>
		<li>
			\snippet OrderSamples.cpp limitonopen
		</li>
		<li>
			\snippet OrderSamples.py limitonopen
		</li>
	</ul>

	\section passive_relative Passive Relative
	 <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3124">Passive Relative</a>
	 orders provide a means for traders to seek a less aggressive price than the National Best Bid and Offer (NBBO) while
	 keeping the order pegged to the best bid (for a buy) or ask (for a sell). The order price is automatically adjusted as the markets move
	 to keep the order less aggressive. For a buy order, your order price is pegged to the NBB by a less aggressive offset, and if the NBB
	 moves up, your bid will also move up. If the NBB moves down, there will be no adjustment because your bid will become aggressive and execute.
	 For a sell order, your price is pegged to the NBO by a less aggressive offset, and if the NBO moves down, your offer will also move down.
	 If the NBO moves up, there will be no adjustment because your offer will become aggressive and execute. In addition to the offset, you can
	 define an absolute cap, which works like a limit price, and will prevent your order from being executed above or below a specified level.
	 The Passive Relative order is similar to the Relative/Pegged-to-Primary order, except that the Passive relative subtracts the offset from
	 the bid and the Relative adds the offset to the bid.
	<ul>
		<li>Products: STK, WAR</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=passvrel">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs passive_relative
		</li>
		<li>
			\snippet OrderSamples.java passive_relative
		</li>
		<li>
			\snippet OrderSamples.vb passive_relative
		</li>
		<li>
			\snippet OrderSamples.cpp passive_relative
		</li>
		<li>
			\snippet OrderSamples.py passive_relative
		</li>
	</ul>

	\section pegged_midpoint Pegged to Midpoint
	 A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=1058">pegged-to-midpoint</a> order provides a means for traders to seek a price at the midpoint of the National Best Bid and Offer (NBBO).
	 The price automatically adjusts to peg the midpoint as the markets move, to remain aggressive. For a buy order, your bid is pegged to
	 the NBBO midpoint and the order price adjusts automatically to continue to peg the midpoint if the market moves. The price only adjusts
	 to be more aggressive. If the market moves in the opposite direction, the order will execute.
	<ul>
		<li>Products: STK</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=pegmid">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs pegged_midpoint
		</li>
		<li>
			\snippet OrderSamples.java pegged_midpoint
		</li>
		<li>
			\snippet OrderSamples.vb pegged_midpoint
		</li>
		<li>
			\snippet OrderSamples.cpp pegged_midpoint
		</li>
		<li>
			\snippet OrderSamples.py pegged_midpoint
		</li>
	</ul>

	\section markettolimit Market to Limit
	 A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=597">Market-to-Limit</a> (MTL)
	 order is submitted as a market order to execute at the current best market price. If the order is only
	 partially filled, the remainder of the order is canceled and re-submitted as a limit order with the limit price equal to the price
	 at which the filled portion of the order executed.
	<ul>
		<li>Products: CFD, FUT, FOP, OPT, STK, WAR</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=mtl">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs markettolimit
		</li>
		<li>
			\snippet OrderSamples.java markettolimit
		</li>
		<li>
			\snippet OrderSamples.vb markettolimit
		</li>
		<li>
			\snippet OrderSamples.cpp markettolimit
		</li>
		<li>
			\snippet OrderSamples.py markettolimit
		</li>
	</ul>

	\section marketwithprotection Market with Protection
	 This order type is useful for futures traders using Globex.
	 A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=601">Market with Protection</a>
	 order is a market order that will be cancelled and
	 resubmitted as a limit order if the entire order does not immediately execute at the market price. The limit price is set by Globex to be
	 close to the current market price, slightly higher for a sell order and lower for a buy order.
	<ul>
		<li>Products: FUT, FOP</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=mktprot">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs marketwithprotection
		</li>
		<li>
			\snippet OrderSamples.java marketwithprotection
		</li>
		<li>
			\snippet OrderSamples.vb marketwithprotection
		</li>
		<li>
			\snippet OrderSamples.cpp marketwithprotection
		</li>
		<li>
			\snippet OrderSamples.py marketwithprotection
		</li>
	</ul>

	\section stop Stop
	 A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=609">Stop</a>
	 order is an instruction to submit a buy or sell market order if and when the user-specified stop trigger price is attained or
	 penetrated. A Stop order is not guaranteed a specific execution price and may execute significantly away from its stop price. A Sell
	 Stop order is always placed below the current market price and is typically used to limit a loss or protect a profit on a long stock
	 position. A Buy Stop order is always placed above the current market price. It is typically used to limit a loss or help protect a
	 profit on a short sale.
	<ul>
		<li>Products: CFD, BAG, CASH, FUT, FOP, OPT, STK, WAR</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=stp">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs stop
		</li>
		<li>
			\snippet OrderSamples.java stop
		</li>
		<li>
			\snippet OrderSamples.vb stop
		</li>
		<li>
			\snippet OrderSamples.cpp stop
		</li>
		<li>
			\snippet OrderSamples.py stop
		</li>
	</ul>

	\section stoplimit Stop Limit
	 A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=608">Stop-Limit</a>
	 order is an instruction to submit a buy or sell limit order when the user-specified stop trigger price is attained or
         penetrated. The order has two basic components: the stop price and the limit price. When a trade has occurred at or through the stop
         price, the order becomes executable and enters the market as a limit order, which is an order to buy or sell at a specified price or better.
	<ul>
		<li>Products: CFD, CASH, FUT, FOP, OPT, STK, WAR</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=stplmt">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs stoplimit
		</li>
		<li>
			\snippet OrderSamples.java stoplimit
		</li>
		<li>
			\snippet OrderSamples.vb stoplimit
		</li>
		<li>
			\snippet OrderSamples.cpp stoplimit
		</li>
		<li>
			\snippet OrderSamples.py stoplimit
		</li>
	</ul>

	\section stopwithprotection Stop with Protection
	 A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3077">Stop with Protection</a>
	 order combines the functionality of a stop limit order with a market with protection order. The order is set
	 to trigger at a specified stop price. When the stop price is penetrated, the order is triggered as a market with protection order,
	 which means that it will fill within a specified protected price range equal to the trigger price +/- the exchange-defined protection
	 point range. Any portion of the order that does not fill within this protected range is submitted as a limit order at the exchange-defined
	 trigger price +/- the protection points.
	<ul>
		<li>Products: FUT</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=stpprot">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs stopwithprotection
		</li>
		<li>
			\snippet OrderSamples.java stopwithprotection
		</li>
		<li>
			\snippet OrderSamples.vb stopwithprotection
		</li>
		<li>
			\snippet OrderSamples.cpp stopwithprotection
		</li>
		<li>
			\snippet OrderSamples.py stopwithprotection
		</li>
	</ul>

	\section trailingstop Trailing Stop
	 A sell <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=605">trailing stop</a>
	 order sets the stop price at a fixed amount below the market price with an attached "trailing" amount. As the
	 market price rises, the stop price rises by the trail amount, but if the stock price falls, the stop loss price doesn't change,
	 and a market order is submitted when the stop price is hit. This technique is designed to allow an investor to specify a limit on the
	 maximum possible loss, without setting a limit on the maximum possible gain. "Buy" trailing stop orders are the mirror image of sell
	 trailing stop orders, and are most appropriate for use in falling markets.

	 Note that Trailing Stop orders can have the trailing amount specified as a percent, as in the example below, or as an absolute amount which is specified in the auxPrice field.
	<ul>
		<li>Products: CFD, CASH, FOP, FUT, OPT, STK, WAR</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=trail">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs trailingstop
		</li>
		<li>
			\snippet OrderSamples.java trailingstop
		</li>
		<li>
			\snippet OrderSamples.vb trailingstop
		</li>
		<li>
			\snippet OrderSamples.cpp trailingstop
		</li>
		<li>
			\snippet OrderSamples.py trailingstop
		</li>
	</ul>

	\section trailingstoplimit Trailing Stop Limit
	 A <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=606">trailing stop limit</a>
	 order is designed to allow an investor to specify a limit on the maximum possible loss, without setting a limit
	 on the maximum possible gain. A SELL trailing stop limit moves with the market price, and continually recalculates the stop trigger
	 price at a fixed amount below the market price, based on the user-defined "trailing" amount. The limit order price is also continually
	 recalculated based on the limit offset. As the market price rises, both the stop price and the limit price rise by the trail amount and
	 limit offset respectively, but if the stock price falls, the stop price remains unchanged, and when the stop price is hit a limit order
	 is submitted at the last calculated limit price. A "Buy" trailing stop limit order is the mirror image of a sell trailing stop limit,
	 and is generally used in falling markets.

	 Trailing Stop Limit orders can be sent with the trailing amount specified as an absolute amount, as in the example below, or as a percentage, specified in the trailingPercent field.

	<b>Important:</b> the 'limit offset' field is set by default in the TWS/IBG settings in v963+. This setting either needs to be changed in the Order Presets, the default value accepted, or the limit price offset sent from the API as in the example below. Not both the 'limit price' and 'limit price offset' fields can be set in TRAIL LIMIT orders.

	<ul>
		<li>Products: BOND, CFD, CASH, FUT, FOP, OPT, STK, WAR</li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs trailingstoplimit
		</li>
		<li>
			\snippet OrderSamples.java trailingstoplimit
		</li>
		<li>
			\snippet OrderSamples.vb trailingstoplimit
		</li>
		<li>
			\snippet OrderSamples.cpp trailingstoplimit
		</li>
		<li>
			\snippet OrderSamples.py trailingstoplimit
		</li>
	</ul>

	\section combolimit Combo Limit
	 Create combination orders that include options, stock and futures legs (stock legs can be included if the order is routed
	 through SmartRouting). Although a combination/spread order is constructed of separate legs, it is executed as a single transaction
	 if it is routed directly to an exchange. For combination orders that are SmartRouted, each leg may be executed separately to ensure
	 best execution.
	<ul>
		<li>Products: OPT, STK, FUT</li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs combolimit
		</li>
		<li>
			\snippet OrderSamples.java combolimit
		</li>
		<li>
			\snippet OrderSamples.vb combolimit
		</li>
		<li>
			\snippet OrderSamples.cpp combolimit
		</li>
		<li>
			\snippet OrderSamples.py combolimit
		</li>
	</ul>

	\section combomarket Combo Market
	 Create combination orders that include options, stock and futures legs (stock legs can be included if the order is routed
	 through SmartRouting). Although a combination/spread order is constructed of separate legs, it is executed as a single transaction
	 if it is routed directly to an exchange. For combination orders that are SmartRouted, each leg may be executed separately to ensure
	 best execution.
	<ul>
		<li>Products: OPT, STK, FUT</li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs combomarket
		</li>
		<li>
			\snippet OrderSamples.java combomarket
		</li>
		<li>
			\snippet OrderSamples.vb combomarket
		</li>
		<li>
			\snippet OrderSamples.cpp combomarket
		</li>
		<li>
			\snippet OrderSamples.py combomarket
		</li>
	</ul>

	\section limitordercombolegprices Combo Limit with Price per Leg
	 Create combination orders that include options, stock and futures legs (stock legs can be included if the order is routed
	 through SmartRouting). Although a combination/spread order is constructed of separate legs, it is executed as a single transaction
	 if it is routed directly to an exchange. For combination orders that are SmartRouted, each leg may be executed separately to ensure
	 best execution.
	<ul>
		<li>Products: OPT, STK, FUT</li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs limitordercombolegprices
		</li>
		<li>
			\snippet OrderSamples.java limitordercombolegprices
		</li>
		<li>
			\snippet OrderSamples.vb limitordercombolegprices
		</li>
		<li>
			\snippet OrderSamples.cpp limitordercombolegprices
		</li>
		<li>
			\snippet OrderSamples.py limitordercombolegprices
		</li>
	</ul>

	\section relativelimitcombo Relative Limit Combo
	 Create combination orders that include options, stock and futures legs (stock legs can be included if the order is routed
	 through SmartRouting). Although a combination/spread order is constructed of separate legs, it is executed as a single transaction
	 if it is routed directly to an exchange. For combination orders that are SmartRouted, each leg may be executed separately to ensure
	 best execution.
	<ul>
		<li>Products: OPT, STK, FUT</li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs relativelimitcombo
		</li>
		<li>
			\snippet OrderSamples.java relativelimitcombo
		</li>
		<li>
			\snippet OrderSamples.vb relativelimitcombo
		</li>
		<li>
			\snippet OrderSamples.cpp relativelimitcombo
		</li>
		<li>
			\snippet OrderSamples.py relativelimitcombo
		</li>
	</ul>

	\section relativemarketcombo Relative Market Combo
	 Create combination orders that include options, stock and futures legs (stock legs can be included if the order is routed
	 through SmartRouting). Although a combination/spread order is constructed of separate legs, it is executed as a single transaction
	 if it is routed directly to an exchange. For combination orders that are SmartRouted, each leg may be executed separately to ensure
	 best execution.
	<ul>
		<li>Products: OPT, STK, FUT</li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs relativemarketcombo
		</li>
		<li>
			\snippet OrderSamples.java relativemarketcombo
		</li>
		<li>
			\snippet OrderSamples.vb relativemarketcombo
		</li>
		<li>
			\snippet OrderSamples.cpp relativemarketcombo
		</li>
		<li>
			\snippet OrderSamples.py relativemarketcombo
		</li>
	</ul>

	\section volatility Volatility
	 Specific to US options, investors are able to create and enter
	 <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=604">Volatility-type</a>
	 orders for options and combinations rather than price orders.
	 Option traders may wish to trade and position for movements in the price of the option determined by its implied volatility. Because
	 implied volatility is a key determinant of the premium on an option, traders position in specific contract months in an effort to take
	 advantage of perceived changes in implied volatility arising before, during or after earnings or when company specific or broad market
	 volatility is predicted to change. In order to create a Volatility order, clients must first create a Volatility Trader page from the
	 Trading Tools menu and as they enter option contracts, premiums will display in percentage terms rather than premium. The buy/sell process
	 is the same as for regular orders priced in premium terms except that the client can limit the volatility level they are willing to pay or
	 receive.
	<ul>
		<li>Products: FOP, OPT</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=volat">Supported exchanges</a></li>
	</ul>
	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs volatility
		</li>
		<li>
			\snippet OrderSamples.java volatility
		</li>
		<li>
			\snippet OrderSamples.vb volatility
		</li>
		<li>
			\snippet OrderSamples.cpp volatility
		</li>
		<li>
			\snippet OrderSamples.py volatility
		</li>
	</ul>

	\section pegged_benchmark Pegged to Benchmark

	The <a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=7100"> Pegged to Benchmark </a>  order is similar to the Pegged to Stock order for options, except that the Pegged to Benchmark allows you to specify any asset type as the reference (benchmark)
	contract for a stock or option order. Both the primary and reference contracts must use the same currency.
	<ul>
		<li>Products: STK, OPT</li>
		<li><a target="_blank" class="linkexternal" href="https://www.interactivebrokers.com/en/index.php?f=3883?ot=pegbench">Supported exchanges</a></li>
	</ul>

	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs pegged_benchmark
		</li>
		<li>
			\snippet OrderSamples.java pegged_benchmark
		</li>
		<li>
			\snippet OrderSamples.vb pegged_benchmark
		</li>
		<li>
			\snippet OrderSamples.cpp pegged_benchmark
		</li>
		<li>
			\snippet OrderSamples.py pegged_benchmark
		</li>
	</ul>

	\section limit_order_with_manual_order_time Limit Order With Manual Order Time

	The Limit Order With Manual Order Time is a @ref limitorder with ManualOrderTime property.<br>

	<ul id="tab">
		<li class="active">
			\snippet OrderSamples.cs limit_order_with_manual_order_time
		</li>
		<li>
			\snippet OrderSamples.java limitorderwithmanualordertime
		</li>
		<li>
			\snippet OrderSamples.vb limit_order_with_manual_order_time
		</li>
		<li>
			\snippet OrderSamples.cpp limit_order_with_manual_order_time
		</li>
		<li>
			\snippet OrderSamples.py limit_order_with_manual_order_time
		</li>
	</ul>

	<b>Placing a Limit Order With Manual Order Time</b><br>
	The <i>Manual Order Time</i> field is required for, and becomes editable for, "manual" orders, which are orders that originate from a client (whether by phone, email, chat, verbally from the floor, from another desk, etc.) and are then entered into the system.<br>
	The <i>Manual Order Time</i> field is not used for client orders received electronically, nor for orders that originate from the account manager (with discretion) in the client's accounts, or when an order is allocated to ALL accounts or among multiple accounts using an account group or model portfolio.

	<ul id="tab">
		<li class="active">
			\snippet Program.cs order_submission_with_manual_order_time
		</li>
		<li>
			\snippet Testbed.java manual_order_time
		</li>
		<li>
			\snippet MainModule.vb order_submission_with_manual_order_time
		</li>
		<li>
			\snippet TestCppClient.cpp manual_order_time
		</li>
		<li>
			\snippet Program.py place_order_with_manual_order_time
		</li>
	</ul>

	<b>Canceling a Limit Order With Manual Order Time</b><br>
	The <i>Manual Order Cancel Time</i> field is required for, and becomes editable for, "manual" order cancelations, which are order cancelations that originate from a client (whether by phone, email, chat, verbally from the floor, from another desk, etc.) and are then entered into the system.<br>
	The <i>Manual Order Cancel Time</i> field is not used for client orders cancelations received electronically, nor for orders that originate from the account manager (with discretion) in the client's accounts, or when an order is allocated to ALL accounts or among multiple accounts using an account group or model portfolio.

	<ul id="tab">
		<li class="active">
			\snippet Program.cs cancel_order_with_manual_order_cancel_time
		</li>
		<li>
			\snippet Testbed.java manual_order_cancel_time
		</li>
		<li>
			\snippet MainModule.vb cancel_order_with_manual_order_cancel_time
		</li>
		<li>
			\snippet TestCppClient.cpp manual_order_cancel_time
		</li>
		<li>
			\snippet Program.py cancel_order_with_manual_order_time
		</li>
	</ul>


	<br><br>

*/
